name: Node.js CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]
      # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: ./backend/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ./backend

      - name: Run tests
        run: npm test
        working-directory: ./backend

      - name: Build project
        run: npm run build --if-present
        working-directory: ./backend

      - name: Run code coverage
        run: npm run coverage
        working-directory: ./backend

  docker-compose-test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify the installation

      - name: Set up Docker Compose
        run: docker-compose -f docker-compose.yml up -d --build

      - name: Wait for MongoDB to be ready
        run: |
          echo "Waiting for MongoDB to be ready..."
          until docker exec $(docker ps -qf "name=app") node -e "require('mongoose').connect(process.env.MONGO_URI).then(() => process.exit(0)).catch(() => process.exit(1))"; do
            sleep 2
          done

      - name: Run tests inside container
        run: docker exec $(docker ps -qf "name=app") npm test

      - name: Shut down docker-compose
        if: always()
        run: docker-compose -f docker.compose.yml down
